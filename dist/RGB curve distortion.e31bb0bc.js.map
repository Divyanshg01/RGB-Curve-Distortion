{"version":3,"sources":["shaders/fragment.glsl","shaders/vertex.glsl","node_modules/three/build/three.module.js","index.js","C:/Users/acer/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["module","exports","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","layerUpdates","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super20","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super21","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_super22","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super23","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super24","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_super25","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super26","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_super27","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_super28","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super29","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super30","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_super31","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","sort","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this25","isMeshDepthMaterial","_Material4","_super33","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","levels","_iterator4","_step4","layerSize","ALPHA","LUMINANCE","LUMINANCE_ALPHA","UNSIGNED_SHORT_5_6_5","_iterator5","_step5","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","DEPTH_COMPONENT","DEPTH_STENCIL","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","_PerspectiveCamera","_super34","_this27","isArrayCamera","Group","_Object3D4","_super35","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator6","_step6","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator7","_step7","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","_EventDispatcher6","_super36","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","isLOD","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","_callee2","glBuffer","_framebuffer2","_callee2$","_context9","PIXEL_PACK_BUFFER","STREAM_READ","flush","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","getBufferSubData","deleteSync","_x4","_x5","_x6","_x7","_x8","_x9","_x10","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","minX","minY","dstX","dstY","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","copyTextureToTexture3D","minZ","dstZ","glTarget","initRenderTarget","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","_Object3D5","_super37","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super38","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super39","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super40","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super41","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_super42","_this35","isBone","DataTexture","_Texture5","_super43","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_super44","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_super45","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix$1","_invMatrixWorld","_identityMatrix","_whiteColor","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_super46","_this39","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","getInstanceCountAt","setInstanceCountAt","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","culled","_Material6","_super47","_this40","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_super48","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","checkIntersection","thresholdSq","distSq","_start","_end","LineSegments","_Line","_super49","_this42","LineLoop","_Line2","_super50","_this43","_Material7","_super51","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super52","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super53","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super54","_this47","CompressedTexture","_Texture8","_super55","_this48","CompressedArrayTexture","_CompressedTexture","_super56","_this49","addLayerUpdates","CompressedCubeTexture","_CompressedTexture2","_super57","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_super58","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super59","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super60","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super61","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super62","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super63","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_super64","_this57","isLineCurve","LineCurve3","_Curve6","_super65","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_super66","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super67","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super68","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super69","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super70","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super71","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super72","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_super73","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_super74","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super75","_this68","PolyhedronGeometry","_BufferGeometry6","_super76","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super77","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super78","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super79","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super80","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super81","_this74","OctahedronGeometry","_PolyhedronGeometry3","_super82","_this75","RingGeometry","_BufferGeometry9","_super83","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super84","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super85","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super86","_this79","TorusGeometry","_BufferGeometry12","_super87","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_super88","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super89","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super90","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super91","_this84","RawShaderMaterial","_ShaderMaterial","_super92","_this85","_Material9","_super93","_this86","_MeshStandardMaterial","_super94","_this87","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","_Material10","_super95","_this88","_Material11","_super96","_this89","_Material12","_super97","_this90","_Material13","_super98","_this91","_Material14","_super99","_this92","_LineBasicMaterial","_super100","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super101","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super102","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super103","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super104","ColorKeyframeTrack","_KeyframeTrack2","_super105","NumberKeyframeTrack","_KeyframeTrack3","_super106","QuaternionLinearInterpolant","_Interpolant4","_super107","QuaternionKeyframeTrack","_KeyframeTrack4","_super108","StringKeyframeTrack","_KeyframeTrack5","_super109","VectorKeyframeTrack","_KeyframeTrack6","_super110","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super111","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_super112","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref3","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super113","CompressedTextureLoader","_Loader3","_super114","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super115","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super116","urls","DataTextureLoader","_Loader6","_super117","texData","TextureLoader","_Loader7","_super118","Light","_Object3D11","_super119","_this97","HemisphereLight","_Light","_super120","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super121","_this99","isSpotLightShadow","SpotLight","_Light2","_super122","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super123","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_super124","_this102","DirectionalLightShadow","_LightShadow3","_super125","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_super126","_this104","AmbientLight","_Light5","_super127","_this105","RectAreaLight","_Light6","_super128","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super129","_this107","MaterialLoader","_Loader8","_super130","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super131","_this109","BufferGeometryLoader","_Loader9","_super132","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super133","_loadAsync","_callee3","_callee3$","_context10","parseAsync","_x14","_x15","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee4","_callee4$","_context11","parseImagesAsync","_x16","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee6","_deserializeImage","_deserializedImage2","_callee6$","_context13","_deserializeImage3","_callee5","_url","_callee5$","_context12","_deserializeImage2","_x18","_x17","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super134","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super135","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super136","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super137","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super138","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super139","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super140","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super141","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super142","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super143","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","_super144","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super145","_this120","GridHelper","_LineSegments2","_super146","_this121","PolarGridHelper","_LineSegments3","_super147","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super148","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super149","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super150","_this125","Box3Helper","_LineSegments6","_super151","_this126","PlaneHelper","_Line3","_super152","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super153","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_super154","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_super155","_this130","isWebGLMultipleRenderTargets","revision","__THREE__","_","_interopRequireDefault","require","_2","_3","_4","_fragment","THREE","_interopRequireWildcard","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","obj","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","iter","arr2","targetX","targetY","textureOne","imageOne","textureTwo","imageTwo","textureThree","imageThree","textureFour","imageFour","Webgl","querySelector","links","querySelectorAll","perspective","sizes","uTexture","uAlpha","link","idx","addEventListeners","setupCamera","onMouseMove","createMesh","innerWidth","innerHeight","aspectRatio","clientX","clientY","elem","linksHover","onWindowResize","viewPort","devicePixelRatio","appendChild","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"RGB curve distortion.e31bb0bc.js","sourceRoot":"..","sourcesContent":["module.exports=\"#define GLSLIFY 1\\nuniform sampler2D uTexture;\\nuniform float uAlpha;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\nvec3 rgbShift(sampler2D textureImage , vec2 uv , vec2 uOffset){\\n        float r = texture2D(textureImage , uv + uOffset).r;\\n        vec2 gb = texture2D(textureImage , uv ).gb;\\n        // float b = texture2D(textureImage , uv + uOffset).b;\\n        return vec3(r ,gb);\\n}\\n\\nvoid main(){\\n    // vec4 color = texture2D(uTexture , vUv);\\nvec3 color = rgbShift(uTexture , vUv , uOffset);\\n    gl_FragColor = vec4(color , uAlpha);\\n}\";","module.exports=\"#define GLSLIFY 1\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nfloat M_PI = 3.141529;\\n\\nvec3 deformationCurve(vec3 position , vec2 uv , vec2 offset){\\n    position.x += sin(uv.y * M_PI)*offset.x;\\n    position.y += sin(uv.x * M_PI) * offset.y;\\n\\n    return position;\\n}\\n\\nvoid main(){\\n    vUv = uv;\\n    vec3 newPosition = deformationCurve(position , uv , uOffset);\\n\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition ,1.0);\\n}\\n\";","/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '165';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( batchId );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerSize = mipmap.width * mipmap.height;\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, mipmap.data.slice( layerSize * layerIndex, layerSize * ( layerIndex + 1 ) ), 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t// When type is GL_UNSIGNED_BYTE, each of these bytes is\n\t\t\t\t\t\t\t// interpreted as one color component, depending on format. When\n\t\t\t\t\t\t\t// type is one of GL_UNSIGNED_SHORT_5_6_5,\n\t\t\t\t\t\t\t// GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_5_5_5_1, each\n\t\t\t\t\t\t\t// unsigned value is interpreted as containing all the components\n\t\t\t\t\t\t\t// for a single pixel, with the color components arranged\n\t\t\t\t\t\t\t// according to format.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// See https://registry.khronos.org/OpenGL-Refpages/es1.1/xhtml/glTexImage2D.xml\n\t\t\t\t\t\t\tlet texelSize;\n\t\t\t\t\t\t\tswitch ( glType ) {\n\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_BYTE:\n\t\t\t\t\t\t\t\t\tswitch ( glFormat ) {\n\n\t\t\t\t\t\t\t\t\t\tcase _gl.ALPHA:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 1;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.LUMINANCE:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 1;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.LUMINANCE_ALPHA:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 2;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.RGB:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 3;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.RGBA:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 4;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error( `Unknown texel size for format ${glFormat}.` );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_4_4_4_4:\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_5_5_5_1:\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_5_6_5:\n\t\t\t\t\t\t\t\t\ttexelSize = 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow new Error( `Unknown texel size for type ${glType}.` );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst layerSize = image.width * image.height * texelSize;\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, image.data.slice( layerSize * layerIndex, layerSize * ( layerIndex + 1 ) ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.render( scene );\n\n\t\t\t} else {\n\n\t\t\t\t_this.clear();\n\n\t\t\t}\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\t\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\t\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\n\t\t\t\t\t\t} finally {\n\n\t\t\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn buffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tlevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\tlet width, height, minX, minY;\n\t\t\tlet dstX, dstY;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\n\t\t\t} else {\n\n\t\t\t\twidth = srcTexture.image.width;\n\t\t\t\theight = srcTexture.image.height;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.max.z - srcRegion.min.z;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.min.z;\n\n\t\t\t} else {\n\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tdepth = image.depth;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t\t// Local color per geometry by using data texture\n\t\tthis._colorsTexture = null;\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// initialize the color to white\n\t\tif ( colorsTexture !== null ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, geometryId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetInstanceCountAt( id ) {\n\n\t\tif ( this._multiDrawInstances === null ) return null;\n\n\t\treturn this._multiDrawInstances[ id ];\n\n\t}\n\n\tsetInstanceCountAt( id, instanceCount ) {\n\n\t\tif ( this._multiDrawInstances === null ) {\n\n\t\t\tthis._multiDrawInstances = new Int32Array( this._maxGeometryCount ).fill( 1 );\n\n\t\t}\n\n\t\tthis._multiDrawInstances[ id ] = instanceCount;\n\n\t\treturn id;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetColorAt( geometryId, color ) {\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcolor.toArray( colorsArray, geometryId * 4 );\n\t\tcolorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( geometryId, color ) {\n\n\t\tconst active = this._active;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn color.fromArray( colorsArray, geometryId * 4 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdates( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\n","import imageOne from \"./images/1.jpeg\";\r\nimport imageTwo from \"./images/2.jpeg\";\r\nimport imageThree from \"./images/3.jpeg\";\r\nimport imageFour from \"./images/4.jpeg\";\r\nimport fragment from \"./shaders/fragment.glsl\";\r\nimport vertex from \"./shaders/vertex.glsl\";\r\nimport * as THREE from \"three\";\r\n\r\nfunction lerp(start, end, t) {\r\n  return start * (1 - t) + end * t;\r\n}\r\n\r\n//mOUSE CORDINATES\r\nlet targetX = 0;\r\nlet targetY = 0;\r\n\r\n//Load Image Textures for Mesh\r\n\r\nconst textureOne = new THREE.TextureLoader().load(imageOne);\r\nconst textureTwo = new THREE.TextureLoader().load(imageTwo);\r\nconst textureThree = new THREE.TextureLoader().load(imageThree);\r\nconst textureFour = new THREE.TextureLoader().load(imageFour);\r\n\r\nclass Webgl {\r\n  constructor() {\r\n    this.container = document.querySelector(\"main\");\r\n    this.links = [...document.querySelectorAll(\"li\")];\r\n    // console.log(this.links);\r\n    this.scene = new THREE.Scene();\r\n    this.perspective = 1000; //camera perpective\r\n    //this is distance between camera and scene\r\n    this.sizes = new THREE.Vector2(0, 0);\r\n    this.offset = new THREE.Vector2(0, 0); //Mesh Position\r\n    this.uniforms = {\r\n      uTexture: { value: textureOne },\r\n      uAlpha: { value: 0.0 },\r\n      uOffset: { value: new THREE.Vector2(0.0, 0.0) },\r\n    };\r\n    this.links.forEach((link, idx) => {\r\n      link.addEventListener(\"mouseenter\", () => {\r\n        switch (idx) {\r\n          case 0:\r\n            this.uniforms.uTexture.value = textureOne;\r\n            break;\r\n          case 1:\r\n            this.uniforms.uTexture.value = textureTwo;\r\n            break;\r\n          case 2:\r\n            this.uniforms.uTexture.value = textureThree;\r\n            break;\r\n          case 3:\r\n            this.uniforms.uTexture.value = textureFour;\r\n            break;\r\n        }\r\n      });\r\n    });\r\n    this.addEventListeners(document.querySelector(\"ul\"));\r\n    this.setupCamera();\r\n    this.onMouseMove();\r\n    this.createMesh();\r\n    this.render();\r\n  }\r\n  get viewPort() {\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n    let aspectRatio = width / height;\r\n    return { width, height, aspectRatio };\r\n  }\r\n  onMouseMove() {\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      targetX = e.clientX;\r\n      targetY = e.clientY;\r\n    });\r\n  }\r\n  addEventListeners(elem) {\r\n    elem.addEventListener(\"mouseenter\", () => {\r\n      this.linksHover = true;\r\n    });\r\n    elem.addEventListener(\"mouseleave\", () => {\r\n      this.linksHover = false;\r\n    });\r\n  }\r\n  setupCamera() {\r\n    window.addEventListener(\"resize\", this.onWindowResize.bind(this));\r\n    let fov =\r\n      (180 * 2 * Math.atan(this.viewPort.height / 2 / this.perspective)) /\r\n      Math.PI;\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      this.viewPort.aspectRatio,\r\n      0.1,\r\n      1000\r\n    );\r\n    this.camera.position.set(0, 0, this.perspective);\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    this.renderer.setSize(this.viewPort.width, this.viewPort.height);\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.container.appendChild(this.renderer.domElement);\r\n  }\r\n  onWindowResize() {\r\n    this.camera.aspect = this.viewPort / aspectRatio;\r\n    this.camera.fov =\r\n      (180 * 2 * Math.atan(this.viewPort.height / 2 / this.perspective)) /\r\n      Math.PI;\r\n    this.renderer.setSize(this.viewPort.width, this.viewPort.height);\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n  createMesh() {\r\n    this.geometry = new THREE.PlaneGeometry(1, 1, 20, 20);\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: vertex,\r\n      fragmentShader: fragment,\r\n      transparent: true,\r\n    });\r\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n    this.sizes.set(250, 350);\r\n    this.mesh.scale.set(this.sizes.x, this.sizes.y);\r\n    this.mesh.position.set(this.offset.x, this.offset.y, 0);\r\n    this.scene.add(this.mesh);\r\n  }\r\n  render() {\r\n    this.offset.x = lerp(this.offset.x, targetX, 0.1);\r\n    this.offset.y = lerp(this.offset.y, targetY, 0.1);\r\n    this.uniforms.uOffset.value.set(\r\n      (targetX - this.offset.x) * 0.001,\r\n      -(targetY - this.offset.y) * 0.001\r\n    );\r\n    this.mesh.position.set(\r\n      this.offset.x - window.innerWidth / 2,\r\n      -this.offset.y + window.innerHeight / 2\r\n    );\r\n    this.linksHover\r\n      ? (this.uniforms.uAlpha.value = lerp(\r\n          this.uniforms.uAlpha.value,\r\n          1.0,\r\n          0.1\r\n        ))\r\n      : (this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 0, 0.1));\r\n    for (let i = 0; i < this.links.length; i++) {\r\n      if (this.linksHover) {\r\n        this.links[i].style.opacity = 0.2;\r\n      } else {\r\n        this.links[i].style.opacity = 0.2;\r\n      }\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    requestAnimationFrame(this.render.bind(this));\r\n  }\r\n}\r\n\r\nnew Webgl();\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}